# systemd shortcuts
listd() { [[ -d /etc/systemd/system/multi-user.target.wants ]] && ls -l /etc/systemd/system/multi-user.target.wants ; [[ -d /etc/systemd/system/default.target.wants ]] && ls -l /etc/systemd/system/default.target.wants; }
start() { sudo systemctl start $1.service ; sudo systemctl status $1.service; }
restart() {	sudo systemctl restart $1.service ; sudo systemctl status $1.service; }
stop() { sudo systemctl stop $1.service ; sudo systemctl status $1.service; }
status() { sudo systemctl status $1.service; }
enable() { sudo systemctl enable $1.service ; listd; }
disable() { sudo systemctl disable $1.service ; listd; }

# fix zsh annoying history behavior
h() { if [ -z "$*" ]; then history 1; else history 1 | egrep "$@"; fi; }

getpkg() { 
	if [[ -z "$1" ]]; then
		echo "Supply a package name and try again."
	else
		cd /scratch
		[[ -d "/scratch/packages/$1" ]] && rm -rf "/scratch/packages/$1"
		svn checkout --depth=empty svn://svn.archlinux.org/packages
		cd packages 
		svn update "$1"
		cd "$1"

		if [[ -d repos/testing-x86_64 ]]; then
			cd repos/testing-x86_64
		elif [[ -d repos/core-x86_64 ]]; then
			cd repos/core-x86_64
		elif [[ -d repos/extra-x86_64 ]]; then
			cd repos/extra-x86_64
		elif [[ -d repos/community-x86_64 ]]; then
			cd repos/community-x86_64
		fi

		git init ; git add * ; git commit -m 'first commit'
		cp ../../trunk/* .
		git commit -av
	fi
}

bi() { cp -a "$1" /scratch ; cd /scratch/"$1"; }

tailc() { tail -n 40 "$1" | column -t; }

fix() {
	if [[ -d "$1" ]]; then
		find "$1" -type d -print0 | xargs -0 chmod 755 && find "$1" -type f -print0 | xargs -0 chmod 644
	else
		echo "$1 is not a directory."
	fi
}

r0() { 	find . -type f -size 0 -print0 | xargs -0 rm -f; }

x() {
	if [[ -f "$1" ]]; then
	case "$1" in
		*.lrz)
			lrztar -d "$1" && cd $(basename "$1" .lrz) ;;
		*.tar.bz2)
			tar xjf "$1" && cd $(basename "$1" .tar.bz2) ;;
		*.tar.gz)
			tar xzf "$1" && cd $(basename "$1" .tar.gz) ;;
		*.tar.xz)
			tar Jxf "$1" && cd $(basename "$1" .tar.xz) ;;
		*.bz2)
			bunzip2 "$1" && cd $(basename "$1" .bz2) ;;
		*.rar)
			rar x "$1" && cd $(basename "$1" .rar) ;;
		*.gz)
			gunzip "$1" && cd $(basename "$1" .gz) ;;
		*.tar)
			tar xf "$1" && cd $(basename "$1" .tar) ;;
		*.tbz2)
			tar xjf "$1" && cd $(basename "$1" .tbz2) ;;
		*.tgz)
			tar xzf "$1" && cd $(basename "$1" .tgz) ;;
		*.zip)
			unzip "$1" && cd $(basename "$1" .zip) ;;
		*.Z)
			uncompress "$1" && cd $(basename "$1" .Z) ;;
		*.7z)
			7z x "$1" && cd $(basename "$1" .7z) ;;
		*) echo "don't know how to extract '$1'..." ;;
		esac 
	else
		echo "'$1' is not a valid file!"
	fi
}
